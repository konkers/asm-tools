# Heavily based on druid's workflow at
#   https://github.com/xi-editor/druid/blob/76fba835605aa1c51e4f541d6a08ff94542f9b0a/.github/workflows/ci.yml

name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    name: cargo fmt
    steps:
      - uses: actions/checkout@v2.2.0

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: install rustfmt
        run: rustup component add rustfmt

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test-stable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    env:
      RUSTFLAGS: -D warnings
    name: cargo test
    steps:
      - uses: actions/checkout@v2.2.0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-cargo-

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      # Clippy packages in deeper-to-higher dependency order
      - name: cargo clippy asm65
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=asm65/Cargo.toml --all-targets -- -D warnings

      - name: cargo clippy util65
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=util65/Cargo.toml --all-targets -- -D warnings

      - name: build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cov-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-cargo-cov-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: download grcov
        run: |
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
          chmod 755 grcov
          mv grcov ~/.cargo/bin
        shell: bash

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: .github/config/grcov.yml
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}